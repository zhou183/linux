ben@ubuntu:~/Desktop$ mkdir week10
ben@ubuntu:~/Desktop$ cd week10
ben@ubuntu:~/Desktop/week10$ cp ../week9/ch09.h ch10.h
ben@ubuntu:~/Desktop/week10$ ls
ch10.h
ben@ubuntu:~/Desktop/week10$ vi 10-1.c
ben@ubuntu:~/Desktop/week10$ gcc 10-1.c -o 10-1
ben@ubuntu:~/Desktop/week10$ ./10-1
child2 :pid=3616,ppid=3614
child 1 :pid=3615,ppid=3614
parent :pid=3614,r1=3615,r2=3616
ben@ubuntu:~/Desktop/week10$ cp 10-1.c 10-2.c
ben@ubuntu:~/Desktop/week10$ vim 10-2.c
ben@ubuntu:~/Desktop/week10$ gcc 10-2.c -o 10-2
10-2.c: In function ‘main’:
10-2.c:49:1: error: expected declaration or statement at end of input
 }
 ^
ben@ubuntu:~/Desktop/week10$ vim 10-2.c
ben@ubuntu:~/Desktop/week10$ gcc 10-2.c -o 10-2
ben@ubuntu:~/Desktop/week10$ ./10-2
child2 :pid=3686,ppid=3684
chilD3 :pid=3687,ppid=3684
parent :pid=3684,r1=3685,r2=3686,r3=3687
ben@ubuntu:~/Desktop/week10$ child 1 :pid=3685,ppid=3684

ben@ubuntu:~/Desktop/week10$ vim 10-2.c
ben@ubuntu:~/Desktop/week10$ gcc 10-2.c -o 10-2
ben@ubuntu:~/Desktop/week10$ ./10-2
chilD3 :pid=3697,ppid=3694
child 1 :pid=3695,ppid=3694
child2 :pid=3696,ppid=3694
parent :pid=3694,r1=3695,r2=3696,r3=3697
ben@ubuntu:~/Desktop/week10$ vim 10-2.c
ben@ubuntu:~/Desktop/week10$ gcc 10-2.c -o 10-2
ben@ubuntu:~/Desktop/week10$ ./10-2
chilD3 :pid=3707,ppid=3704
child 1 :pid=3705,ppid=3704
child2 :pid=3706,ppid=3704
parent :pid=3704,r1=3705,r2=3706,r3=3707
ben@ubuntu:~/Desktop/week10$ vim 10-2.c
ben@ubuntu:~/Desktop/week10$ gcc 10-2.c -o 10-2
10-2.c: In function ‘main’:
10-2.c:15:11: error: ‘O’ undeclared (first use in this function)
   if(r1_1<O)
           ^
10-2.c:15:11: note: each undeclared identifier is reported only once for each function it appears in
10-2.c:58:64: error: ‘r3’ undeclared (first use in this function); did you mean ‘r2’?
     printf("parent :pid=%d,r1=%d,r2=%d,r3=%d\n",getpid(),r1,r2,r3);
                                                                ^~
                                                                r2
10-2.c: At top level:
10-2.c:63:1: error: expected identifier or ‘(’ before ‘}’ token
 }
 ^
ben@ubuntu:~/Desktop/week10$ vim 10-2.c
ben@ubuntu:~/Desktop/week10$ gcc 10-2.c -o 10-2
10-2.c:68:1: error: expected identifier or ‘(’ before ‘}’ token
 }
 ^
ben@ubuntu:~/Desktop/week10$ gcc 10-2.c -o 10-2
10-2.c:68:1: error: expected identifier or ‘(’ before ‘}’ token
 }
 ^
ben@ubuntu:~/Desktop/week10$ vim 10-2.c
ben@ubuntu:~/Desktop/week10$ gcc 10-2.c -o 10-2
ben@ubuntu:~/Desktop/week10$ ./10-2
ben@ubuntu:~/Desktop/week10$ child2 :pid=3729,ppid=1
child 1 :pid=3728,ppid=1
parent :pid=3730,r1=0,r2=573749040,r1_1=0
parent :pid=3728,r1=0,r2=573749040,r1_1=0

ben@ubuntu:~/Desktop/week10$ vim 10-2.c
ben@ubuntu:~/Desktop/week10$ gcc 10-2.c -o 10-2
10-2.c: In function ‘main’:
10-2.c:22:57: error: expected ‘)’ before ‘;’ token
    printf("child 11 pid=%d,ppid=%d\n",getpid(),getppid();
                                                         ^
10-2.c:24:3: error: expected ‘;’ before ‘}’ token
   }
   ^
10-2.c:68:2: error: expected declaration or statement at end of input
  }
  ^
ben@ubuntu:~/Desktop/week10$ vim 10-2.c

ben@ubuntu:~/Desktop/week10$ gcc 10-2.c -o 10-2
10-2.c: In function ‘main’:
10-2.c:68:2: error: expected declaration or statement at end of input
  }
  ^
ben@ubuntu:~/Desktop/week10$ vim 10-2.c
ben@ubuntu:~/Desktop/week10$ gcc 10-2.c -o 10-2
ben@ubuntu:~/Desktop/week10$ ./10-2
child3 :pid=3776,ppid=3773
child2 :pid=3775,ppid=3773
child 11 pid=3777,ppid=3774
child 1 :pid=3774,ppid=3773,r11=3777
parent :pid=3773,r1=3774,r2=3775,r1_1=3776
ben@ubuntu:~/Desktop/week10$ vim 10-2.c
ben@ubuntu:~/Desktop/week10$ gcc 10-2.c -o 10-2
ben@ubuntu:~/Desktop/week10$ ./10-2
child r3 :pid=3787,ppid=3784
child r2 :pid=3786,ppid=3784
child 11 pid=3788,ppid=3785
child r1 :pid=3785,ppid=3784,r11=3788
parent :pid=3784,r1=3785,r2=3786,r3=3787
ben@ubuntu:~/Desktop/week10$ vi test.c
ben@ubuntu:~/Desktop/week10$ gcc test.c -o test
ben@ubuntu:~/Desktop/week10$ ./test
test :pid=3796,ppid=3446
argv[0]=./test
ben@ubuntu:~/Desktop/week10$ ./test hello world
test :pid=3797,ppid=3446
argv[0]=./test
argv[1]=hello
argv[2]=world
^C
ben@ubuntu:~/Desktop/week10$ vi 10-3.c
ben@ubuntu:~/Desktop/week10$ gcc 10-3.c -o 10-3
ben@ubuntu:~/Desktop/week10$ ./10-3
10-4:pid=3804,ppid=3446
test :pid=3804,ppid=3446
argv[0]=./test
argv[1]=hello
argv[2]=world
ben@ubuntu:~/Desktop/week10$ vi test.c
ben@ubuntu:~/Desktop/week10$ gcc test.c -o test
ben@ubuntu:~/Desktop/week10$ gcc 10-3.c -o 10-3
ben@ubuntu:~/Desktop/week10$ cp 10-3.c 10-5.c
ben@ubuntu:~/Desktop/week10$ vi 10-5.c
ben@ubuntu:~/Desktop/week10$ gcc 10-5.c -o 10-5
ben@ubuntu:~/Desktop/week10$ ./10-5
10-5:pid=3824,ppid=3446
test :pid=3826,ppid=3825
argv[0]=./test
argv[1]=hello
argv[2]=world
argv[3]=2020
argv[4]=11
argv[5]=23
After calling!
ben@ubuntu:~/Desktop/week10$ cat test.c
#include"ch10.h"
int main(int argc,char **argv)
{
	int i;
	printf("test :pid=%d,ppid=%d\n",getpid(),getppid());
	for(i=0;i<argc;i++)
	{
		printf("argv[%d]=%s\n",i,argv[i]);
	}
	sleep(100);
	return 0;
}



include"ch10.h"
int main()
{
	int r1,r2;
	r1=fork();
	if(r1<0)
	{
		perror("fork1 failed!\n");
		exit(-1);
	}
	else if (r1==0)
	{
		printf("child 1 :pid=%d,ppid=%d\n",getpid(),getppid());
		exit(0);
	}
	else
	{
		r2=fork();
		if(r2<0)
		{
			perror("fork2 failed!\n");
			exit(-1);
		}
		else if(r2==0)
		{
			printf("child2 :pid=%d,ppid=%d\n",getpid(),getppid());
			exit(0);
		}
		else
		{
			wait(NULL);
			wait(NULL);
			printf("parent :pid=%d,r1=%d,r2=%d\n",getpid(),r1,r2);
			return 0;
		}
	}
}
#include"ch10.h"
int main()
{
	int r1,r2,r3;
	r1=fork();
	if(r1<0)
	{
		perror("fork1 failed!\n");
		exit(-1);
	}
	else if (r1==0)
	{
		int r11;
		r11=fork();
		if(r11<0)
		{
			perror("r11 fork failed!\n");
			exit(-1);
		}
		else if(r11==0)
		{
			printf("child 11 pid=%d,ppid=%d\n",getpid(),getppid());
			exit(0);
		}
		else{
		wait(NULL);
		printf("child r1 :pid=%d,ppid=%d,r11=%d\n",getpid(),getppid(),r11);
		exit(0);
		}
	}
	else
	{
		r2=fork();
		if(r2<0)
		{
			perror("fork2 failed!\n");
			exit(-1);
		}
		else if(r2==0)
		{
			wait(NULL);
			printf("child r2 :pid=%d,ppid=%d\n",getpid(),getppid());
			exit(0);
		}
		else
		{
			r3=fork();
			if(r3<0)
                	{
                        	perror("fork3 failed!\n");
                        	exit(-1);
                	}
                	else if(r3==0)
			{
                        	wait(NULL);
				printf("child r3 :pid=%d,ppid=%d\n",getpid(),getppid());
                        	exit(0);
                	}
			else
			{
				wait(NULL);
				wait(NULL);
				wait(NULL);
				printf("parent :pid=%d,r1=%d,r2=%d,r3=%d\n",getpid(),r1,r2,r3);
				return 0;
			}
		}
	}
}
#include"ch10.h"
int main()
{
	int r;
	printf("10-4:pid=%d,ppid=%d\n",getpid(),getppid());
	r=execl("./test","./test","hello","world",NULL);
	if(r==-1)
	{
		perror("execl failed!\n");
		exit(-1);
	}
	printf("After calling!\n");
	return 0;
}
#include"ch10.h"
int main()
{
	int r;
	printf("10-5:pid=%d,ppid=%d\n",getpid(),getppid());
	system("./test hello world 2020 11 23\n");
	//r=execl("./test","./test","hello","world",NULL);
	/*if(r==-1)
	{
		perror("execl failed!\n");
		exit(-1);
	}*/
	printf("After calling!\n");
	return 0;
}




ben@ubuntu:~/Desktop/week10$ vi 10-6.c
ben@ubuntu:~/Desktop/week10$ gcc 10-6.c -o 10-6
ben@ubuntu:~/Desktop/week10$ ./10-6
10-6 child:pid=3865 ,ppid=3864
test :pid=3865,ppid=3864
argv[0]=./test
argv[1]=hello
argv[2]=world
10-6 : r=3865,status=0
ben@ubuntu:~/Desktop/week10$ vi test.c
ben@ubuntu:~/Desktop/week10$ gcc test.c -o test
ben@ubuntu:~/Desktop/week10$ gcc 10-6.c -o 10-6
ben@ubuntu:~/Desktop/week10$ ./10-6
10-6 child:pid=3926 ,ppid=3925
test :pid=3926,ppid=3925
argv[0]=./test
argv[1]=hello
argv[2]=world
10-6 : r=3926,status=99
ben@ubuntu:~/Desktop/week10$ cat 10-6.c
#include"ch10.h"
int main()
{
	pid_t pid;
	pid=fork();
	if(pid<0)
	{
	
		perror("fork failed!\n");
		exit(-1);
	}
	else if(pid==0)
	{
		printf("10-6 child:pid=%d ,ppid=%d\n",getpid(),getppid());
		execl("./test","./test","hello","world",NULL);
		printf("10-6 child end!\n");
		exit(1);
	}
	else
	{
		int r,s;
		r=wait(&s);
		printf("10-6 : r=%d,status=%d\n",r,WEXITSTATUS(s));
		return 0;
	}
}





ben@ubuntu:~/Desktop/week10$ vi 10-7.c
ben@ubuntu:~/Desktop/week10$ gcc 10-7.c -o 10-7
ben@ubuntu:~/Desktop/week10$ ./10-7
bar say bye!
foo say bye!
Oop ~~~~~forget a newline!ben@ubuntu:~/Desktop/week10$ 
ben@ubuntu:~/Desktop/week10$ ./10-7 exit
bar say bye!
foo say bye!
Oop ~~~~~forget a newline!ben@ubuntu:~/Desktop/week10$ ./10-7 _exit
bar say bye!
foo say bye!
Oop ~~~~~forget a newline!ben@ubuntu:~/Desktop/week10$ vi 10-7.c
ben@ubuntu:~/Desktop/week10$ gcc 10-7.c -o 10-7
ben@ubuntu:~/Desktop/week10$ ./10-7 _exit
ben@ubuntu:~/Desktop/week10$ cat 10-7.c
#include"ch10.h"
void foo()
{
	fprintf(stderr,"foo say bye!\n");
}
void bar()
{
	fprintf(stderr,"bar say bye!\n");
}

int main(int argc,char **argv)
{
	atexit(foo);
	atexit(bar);
	fprintf(stdout,"Oop ~~~~~forget a newline!");
	sleep(2);
	if(argc>1&&strcmp(argv[1],"exit")==0)
		exit(0);
	if(argc>1&&strcmp(argv[1],"_exit")==0)
		_exit(0);
}




ben@ubuntu:~/Desktop/week10$ cat 10-8.c
#include"ch10.h"
int main()
{
	pid_t pid;
	pid=fork();
	if(pid<0)
	{
		printf("error!\n");
		exit(-1);
	}
	else if(pid==0)
	{
		exit(0);
	}
	else
	{
		sleep(200);
		wait(NULL);
	}
	return 0;
}

ben@ubuntu:~/Desktop$ ps au
USER        PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
root        650  0.0  0.0  17932  1700 tty1     Ss+  10:33   0:00 /sbin/agetty -
root        669  0.8  6.2 648848 126904 tty7    Ssl+ 10:33   2:45 /usr/lib/xorg/
ben        4039  0.0  0.2  24148  4932 pts/0    Ss+  15:36   0:00 bash
ben        4120  0.0  0.2  24196  4708 pts/1    Ss   16:03   0:00 bash
ben        4132  0.0  0.1  41416  3512 pts/1    R+   16:05   0:00 ps au
ben@ubuntu:~/Desktop$ ps au
USER        PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
root        650  0.0  0.0  17932  1700 tty1     Ss+  10:33   0:00 /sbin/agetty -
root        669  0.8  6.2 648848 126904 tty7    Ssl+ 10:33   2:46 /usr/lib/xorg/
ben        4039  0.0  0.2  24148  4932 pts/0    Ss   15:36   0:00 bash
ben        4120  0.0  0.2  24196  4708 pts/1    Ss   16:03   0:00 bash
ben        4133  0.0  0.0   4376   708 pts/0    S+   16:06   0:00 ./10-8
ben        4134  0.0  0.0      0     0 pts/0    Z+   16:06   0:00 [10-8] <defunc
ben        4135  0.0  0.1  41416  3248 pts/1    R+   16:06   0:00 ps au
ben@ubuntu:~/Desktop$ cat /proc//4134/status
Name:	10-8
State:	Z (zombie)
Tgid:	4134
Ngid:	0
Pid:	4134
PPid:	4133
TracerPid:	0
Uid:	1000	1000	1000	1000
Gid:	1000	1000	1000	1000
FDSize:	0
Groups:	4 24 27 30 46 118 127 1000 
NStgid:	4134
NSpid:	4134
NSpgid:	4133
NSsid:	4039
Threads:	1
SigQ:	0/7597
SigPnd:	0000000000000000
ShdPnd:	0000000000000000
SigBlk:	0000000000000000
SigIgn:	0000000000000000
SigCgt:	0000000000000000
CapInh:	0000000000000000
CapPrm:	0000000000000000
CapEff:	0000000000000000
CapBnd:	0000003fffffffff
CapAmb:	0000000000000000
NoNewPrivs:	0
Seccomp:	0
Speculation_Store_Bypass:	thread vulnerable
Cpus_allowed:	ffffffff,ffffffff,ffffffff,ffffffff
Cpus_allowed_list:	0-127
Mems_allowed:	00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000001
Mems_allowed_list:	0
voluntary_ctxt_switches:	1
nonvoluntary_ctxt_switches:	0



ben@ubuntu:~/Desktop/week10$ vi 10-9.c
ben@ubuntu:~/Desktop/week10$ gcc 10-9.c -o 10-9
ben@ubuntu:~/Desktop/week10$ ./10-9
process 4288 abnormal termination,signal number =8
Floating point exception
process 4287 abnormal termination,signal number =6
Aborted
process 4286 normal termination,exit status =0
wait over: No child processes
ben@ubuntu:~/Desktop/week10$ vi js.c
ben@ubuntu:~/Desktop/week10$ ./10-9
process 4302 abnormal termination,signal number =8
Floating point exception
process 4301 abnormal termination,signal number =6
Aborted
process 4300 normal termination,exit status =0
wait over: No child processes
ben@ubuntu:~/Desktop/week10$ vi js.c
ben@ubuntu:~/Desktop/week10$ gcc js.c -o js
ben@ubuntu:~/Desktop/week10$ ./js
child 2 4442 is running!
nchild 1 4441 is running!
nparent 4440 will exit now! r1=4441,s1=108
parent 4440 will exit now! r2=4442,s2=99
ben@ubuntu:~/Desktop/week10$ vi js.c
ben@ubuntu:~/Desktop/week10$ gcc js.c -o js
ben@ubuntu:~/Desktop/week10$ ./js
child 2 4465 is running!
child 1 4464 is running!
parent 4463 will exit now! r1=4464,s1=108
parent 4463 will exit now! r2=4465,s2=99
ben@ubuntu:~/Desktop/week10$ cat 10-9.c
#include"ch10.h"
void pr_exit(int status,pid_t pid)
{
	int sig;
	if(WIFEXITED(status))
		printf("process %d normal termination,exit status =%d\n",pid,WEXITSTATUS(status));
	else if(WIFSIGNALED(status))
	{
		sig = WTERMSIG(status);
		printf("process %d abnormal termination,signal number =%d%s\n",pid,sig,
	#ifdef WCOREDUMP
			WCOREDUMP(status) ? "(core file generated)" : "");
	#else
		"");
	#endif
		psignal(sig, "");		
	}else if(WIFSTOPPED(status))
	{
		sig=WSTOPSIG(status);
		printf("process %d stopped,signal number=%d:",pid,sig);
		psignal(sig, "");
	}
}

int zero=0;
int main(void)
{
	pid_t pid;
	int status;
	if((pid=fork())==0)
		exit(0);
	if((pid=fork())==0)
		abort();
	if((pid=fork())==0)
	{
		status/=zero;
		exit(0);
	}
	while ((pid=wait(&status))>=0)
		pr_exit(status,pid);
	perror("wait over");
	exit(EXIT_SUCCESS);
}


ben@ubuntu:~/Desktop/week10$ cat js.c
#include"ch10.h"
int main()
{
	pid_t pid;
	pid=fork();
	if(pid<0)
	{
		printf("error!\n");
		exit(-1);
	}
	else if(pid==0)
	{
		printf("child 1 %d is running!\n",getpid());
		exit(108);
	}
	else
	{
		int r1,r2,s1,s2,y;
		y=fork();
		if(y<0)
		{
			printf("error!\n");
			exit(-1);
		}
		else if(y==0)
		{
			printf("child 2 %d is running!\n",getpid());
			exit(99);
		}
		else
		{
			r1=waitpid(pid,&s1,0);
			r2=waitpid(y,&s2,0);
			printf("parent %d will exit now! r1=%d,s1=%d\n",getpid(),r1,WEXITSTATUS(s1));
			printf("parent %d will exit now! r2=%d,s2=%d\n",getpid(),r2,WEXITSTATUS(s2));
			exit(0);}

	}
}





ben@ubuntu:~/Desktop/week10$ vi js.c
ben@ubuntu:~/Desktop/week10$ gcc js.c -o js
ben@ubuntu:~/Desktop/week10$ ./js
child 2 4488 is running!
parent 4486 will exit now! r1=0,s1=73
parent 4486 will exit now! r2=4488,s2=99
ben@ubuntu:~/Desktop/week10$ child 1 4487 is running!
ps -ef |grep js
ben        4487      1 98 17:03 pts/0    00:01:05 ./js
ben        4490   4039  0 17:04 pts/0    00:00:00 grep --color=auto js

